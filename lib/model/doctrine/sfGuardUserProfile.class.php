<?php

/**
 * sfGuardUserProfile
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    quieroeldiscorolling
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class sfGuardUserProfile extends BasesfGuardUserProfile
{
	private $facebookProfile;
	
	/**
	 * @return Boolean
	 */
	public function isFacebookUser()
	{
		return ($this->getFacebookUid())?true:false;
	}
	
	/**
	 * @return Boolean
	 */
	public function isTwitterUser()
	{
		return ($this->getTwitterUsername())?true:false;
	}

	public function publishFacebookPost($message, $link) 
	{
		$facebook = sfFacebook::getFacebookClient();
		
		$publishStream = $facebook->api("/".$this->getFacebookUid()."/feed", 'post', array(
				'message' => $message, 
				'link' => $link,
				'name' => 'Warsteiner - German Master Tour',
				'description' => $message." Vos también podés participar acá ".$link."."
		));
	}
	
	/**
	 * @return Array
	 */
	public function getFacebookProfile()
	{
		if(!$this->facebookProfile)
		{
			$facebook = sfFacebook::getFacebookClient();
	
			try {
				$this->facebookProfile = $facebook->api('/'.$this->getFacebookUid().'?fields=id,name,picture');
			} catch (FacebookApiException $e) {
				error_log($e);
				throw $e;
			}
		}
	
		return $this->facebookProfile;
	}
	
	/**
	 * @return String
	 */
	public function getSocialName()
	{
		if($this->isFacebookUser())
		{
			$facebookProfile = $this->getFacebookProfile();
			return isset($facebookProfile['name'])?$facebookProfile['name']:'Anónimo';
		}else
		{
			return ($this->getTwitterUsername())?'@'.$this->getTwitterScreenName():'Anónimo';
		}
	}
	
	/**
	 * @return String
	 */
	public function getSocialPicture()
	{
		if($this->isFacebookUser())
		{
			$facebookProfile = $this->getFacebookProfile();
			return isset($facebookProfile['picture']['data']['url'])?$facebookProfile['picture']['data']['url']:image_path('avatar.jpg');
		}else if($this->isTwitterUser())
		{
			return ($this->getTwitterUsername())?"http://api.twitter.com/1/users/profile_image/".$this->getTwitterScreenName().".json?size=bigger":image_path('avatar.jpg');
		}else
		{
			return image_path('avatar.jpg');
		}	
	}
}
